name: "Rust CI"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    uses: darbiadev/.github/.github/workflows/rust-lint.yaml@45471b560aceda922ebec22a20b72f0c29914cad # v15.1.0

  clippy:
    needs: lint
    uses: darbiadev/.github/.github/workflows/rust-clippy.yaml@45471b560aceda922ebec22a20b72f0c29914cad # v15.1.0

  test:
    needs: clippy
    strategy:
      matrix:
        triple:
          - { os: "ubuntu-latest", target: "x86_64-unknown-linux-gnu" }

    uses: darbiadev/.github/.github/workflows/rust-test.yaml@45471b560aceda922ebec22a20b72f0c29914cad # v15.1.0
    with:
      os: ${{ matrix.triple.os }}
      target: ${{ matrix.triple.target }}

  docs:
    permissions:
      contents: read
      pages: write
      id-token: write
    uses: darbiadev/.github/.github/workflows/github-pages-rust-doc.yaml@45471b560aceda922ebec22a20b72f0c29914cad # v15.1.0

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Cache Rust and project dependencies"
        id: cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ hashFiles('Cargo.lock') }}

      - name: "Install grcov"
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo install grcov

      - name: "Run tests"
        run: cargo test --no-fail-fast
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "selene-%p-%m.profraw"

      - name: "Generate coverage data"
        run: |
          grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: "Upload coverage reports to Codecov"
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
